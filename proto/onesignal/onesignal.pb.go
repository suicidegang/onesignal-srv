// Code generated by protoc-gen-go.
// source: proto/onesignal/onesignal.proto
// DO NOT EDIT!

/*
Package onesignal is a generated protocol buffer package.

It is generated from these files:
	proto/onesignal/onesignal.proto

It has these top-level messages:
	SendAllRequest
	SendAllResponse
	SendRequest
	SendResponse
*/
package onesignal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendAllRequest struct {
	Message   string            `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SendAllRequest) Reset()                    { *m = SendAllRequest{} }
func (m *SendAllRequest) String() string            { return proto.CompactTextString(m) }
func (*SendAllRequest) ProtoMessage()               {}
func (*SendAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendAllRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type SendAllResponse struct {
	MessageID string `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
}

func (m *SendAllResponse) Reset()                    { *m = SendAllResponse{} }
func (m *SendAllResponse) String() string            { return proto.CompactTextString(m) }
func (*SendAllResponse) ProtoMessage()               {}
func (*SendAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SendRequest struct {
	Message   string            `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Segments  []string          `protobuf:"bytes,3,rep,name=segments" json:"segments,omitempty"`
	Ids       []string          `protobuf:"bytes,4,rep,name=ids" json:"ids,omitempty"`
}

func (m *SendRequest) Reset()                    { *m = SendRequest{} }
func (m *SendRequest) String() string            { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()               {}
func (*SendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SendRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type SendResponse struct {
	MessageID string `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
}

func (m *SendResponse) Reset()                    { *m = SendResponse{} }
func (m *SendResponse) String() string            { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()               {}
func (*SendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*SendAllRequest)(nil), "SendAllRequest")
	proto.RegisterType((*SendAllResponse)(nil), "SendAllResponse")
	proto.RegisterType((*SendRequest)(nil), "SendRequest")
	proto.RegisterType((*SendResponse)(nil), "SendResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Onesignal service

type OnesignalClient interface {
	SendAll(ctx context.Context, in *SendAllRequest, opts ...client.CallOption) (*SendAllResponse, error)
	Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*SendResponse, error)
}

type onesignalClient struct {
	c           client.Client
	serviceName string
}

func NewOnesignalClient(serviceName string, c client.Client) OnesignalClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "onesignal"
	}
	return &onesignalClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *onesignalClient) SendAll(ctx context.Context, in *SendAllRequest, opts ...client.CallOption) (*SendAllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Onesignal.SendAll", in)
	out := new(SendAllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onesignalClient) Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*SendResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Onesignal.Send", in)
	out := new(SendResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Onesignal service

type OnesignalHandler interface {
	SendAll(context.Context, *SendAllRequest, *SendAllResponse) error
	Send(context.Context, *SendRequest, *SendResponse) error
}

func RegisterOnesignalHandler(s server.Server, hdlr OnesignalHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Onesignal{hdlr}, opts...))
}

type Onesignal struct {
	OnesignalHandler
}

func (h *Onesignal) SendAll(ctx context.Context, in *SendAllRequest, out *SendAllResponse) error {
	return h.OnesignalHandler.SendAll(ctx, in, out)
}

func (h *Onesignal) Send(ctx context.Context, in *SendRequest, out *SendResponse) error {
	return h.OnesignalHandler.Send(ctx, in, out)
}

func init() { proto.RegisterFile("proto/onesignal/onesignal.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xcf, 0x4b, 0x2d, 0xce, 0x4c, 0xcf, 0x4b, 0xcc, 0x41, 0xb0, 0xf4, 0xc0, 0x32,
	0x4a, 0xcb, 0x18, 0xb9, 0xf8, 0x82, 0x53, 0xf3, 0x52, 0x1c, 0x73, 0x72, 0x82, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x21, 0x1b, 0x2e, 0xce, 0xb2, 0xc4, 0xa2, 0xcc, 0xc4,
	0xa4, 0x9c, 0xd4, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x39, 0x3d, 0x54, 0xdd, 0x7a,
	0x61, 0x30, 0x05, 0xae, 0x79, 0x25, 0x45, 0x95, 0x41, 0x08, 0x0d, 0x52, 0x36, 0x5c, 0x7c, 0xa8,
	0x92, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x50, 0x5b, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0xd6,
	0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0x09, 0x26, 0xb0, 0x18, 0x84, 0x63, 0xc5, 0x64, 0xc1, 0xa8, 0xa4,
	0xcf, 0xc5, 0x0f, 0xb7, 0xa9, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x86, 0x8b, 0x13, 0xea,
	0x32, 0x4f, 0x17, 0xa8, 0x21, 0x08, 0x01, 0xa5, 0x73, 0x8c, 0x5c, 0xdc, 0x20, 0x1d, 0x84, 0xbd,
	0x65, 0x89, 0xe9, 0x2d, 0x69, 0x3d, 0x24, 0xad, 0xb8, 0xfd, 0x24, 0x24, 0xc5, 0xc5, 0x51, 0x9c,
	0x9a, 0x9e, 0x9b, 0x9a, 0x57, 0x52, 0x2c, 0xc1, 0xac, 0xc0, 0xac, 0xc1, 0x19, 0x04, 0xe7, 0x83,
	0x7c, 0x97, 0x99, 0x52, 0x2c, 0xc1, 0x02, 0x16, 0x06, 0x31, 0x29, 0x0c, 0x01, 0x1d, 0x2e, 0x1e,
	0x88, 0xa3, 0x88, 0xf1, 0xbe, 0x51, 0x12, 0x17, 0xa7, 0x3f, 0x2c, 0xae, 0x85, 0xf4, 0xb8, 0xd8,
	0xa1, 0x81, 0x27, 0xc4, 0x8f, 0x16, 0x61, 0x52, 0x02, 0x7a, 0x68, 0xe1, 0xaa, 0xc4, 0x20, 0xa4,
	0xca, 0xc5, 0x02, 0x12, 0x14, 0xe2, 0x41, 0x0e, 0x06, 0x29, 0x5e, 0x3d, 0x64, 0xfb, 0x95, 0x18,
	0x92, 0xd8, 0xc0, 0x69, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x5e, 0xf2, 0x99, 0x66,
	0x02, 0x00, 0x00,
}
